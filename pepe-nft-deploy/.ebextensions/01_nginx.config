files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      upstream nodejs {
        server 127.0.0.1:8080;
        keepalive 256;
      }

      # HTTP server block - redirect all HTTP to HTTPS
      server {
        listen 80;
        server_name www.pepenftgenerator.xyz pepenftgenerator.xyz;
        if ($http_x_forwarded_proto = 'http') {
          return 301 https://$host$request_uri;
        }
        return 301 https://$host$request_uri;
      }

      # HTTPS server block
      server {
        listen 443 ssl http2;
        server_name www.pepenftgenerator.xyz pepenftgenerator.xyz;

        # SSL Configuration
        ssl_certificate      /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem;
        ssl_session_timeout  1d;
        ssl_session_cache    shared:SSL:50m;
        ssl_session_tickets  off;

        # Modern configuration
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers        ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS (uncomment if you're sure)
        # add_header Strict-Transport-Security "max-age=63072000" always;

        # Root directory and index
        root /var/app/current/build;
        index index.html;

        # Static file serving with caching
        location /static/ {
          expires 30d;
          add_header Cache-Control "public, no-transform";
        }

        # API endpoints
        location /api/ {
          proxy_pass http://nodejs;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_cache_bypass $http_upgrade;
          
          # Increase timeouts for long-running requests
          proxy_read_timeout 300;
          proxy_connect_timeout 300;
          proxy_send_timeout 300;
        }

        # Main location block
        location / {
          try_files $uri $uri/ /index.html;
          add_header Cache-Control "no-cache";
        }

        # Handle errors
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root /usr/share/nginx/html;
        }
      }

container_commands:
  01_reload_nginx:
    command: "sudo service nginx reload"

option_settings:
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx
  aws:elasticbeanstalk:environment:process:default:
    Port: 8080
    HealthCheckPath: /api/health