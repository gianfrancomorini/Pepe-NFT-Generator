# .ebextensions/00_combined_config.config
commands:
  01_nginx_types_hash:
    command: |
      echo 'types_hash_max_size 2048;' >> /etc/nginx/nginx.conf
      echo 'types_hash_bucket_size 128;' >> /etc/nginx/nginx.conf
    ignoreErrors: true

container_commands:
  01_create_cert_dirs:
    command: |
      mkdir -p /etc/letsencrypt/live/pepenftgenerator.xyz/
      mkdir -p /etc/letsencrypt/archive/pepenftgenerator.xyz/
      chown -R root:root /etc/letsencrypt
      chmod -R 755 /etc/letsencrypt
    ignoreErrors: true
    
  02_copy_ssl_certs:
    command: |
      # Add error handling and logging
      echo "Starting SSL certificate copy process..."
      
      # Create a temporary directory
      TEMP_DIR=$(mktemp -d)
      
      # Download certificates to temporary location first
      aws s3 cp s3://pepenft-ssl-certificates/ssl/fullchain.pem $TEMP_DIR/fullchain.pem || exit 1
      aws s3 cp s3://pepenft-ssl-certificates/ssl/privkey.pem $TEMP_DIR/privkey.pem || exit 1
      
      # Verify the downloads
      if [ ! -f $TEMP_DIR/fullchain.pem ] || [ ! -f $TEMP_DIR/privkey.pem ]; then
        echo "Failed to download certificates from S3"
        exit 1
      fi
      
      # Move to final location
      mv $TEMP_DIR/fullchain.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      mv $TEMP_DIR/privkey.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      
      # Set permissions
      chmod 644 /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem
      chmod 600 /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem
      
      # Cleanup
      rm -rf $TEMP_DIR
      
      echo "SSL certificate copy process completed"
    leader_only: true

  03_verify_nginx_config:
    command: |
      echo "Verifying nginx configuration..."
      nginx -t 2>&1 || {
        echo "Nginx configuration test failed"
        exit 1
      }
    ignoreErrors: false

  04_reload_nginx:
    command: |
      echo "Reloading nginx..."
      service nginx reload || {
        echo "Failed to reload nginx"
        exit 1
      }
    ignoreErrors: false

files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Nginx error log configuration
      error_log /var/log/nginx/error.log debug;
      
      # HTTPS server block
      server {
          listen 443 ssl http2;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;

          # SSL Configuration
          ssl_certificate /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem;
          
          ssl_session_timeout 1d;
          ssl_session_cache shared:SSL:50m;
          ssl_session_tickets off;

          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
          ssl_prefer_server_ciphers off;

          # Root directory for static files
          root /var/app/current/build;
          
          # Static file handling with proper caching
          location /static/ {
              expires 30d;
              add_header Cache-Control "public, no-transform";
              try_files $uri =404;
          }

          # Frontend routing
          location / {
              try_files $uri $uri/ /index.html;
              add_header Cache-Control "no-cache";
          }

          # API proxy with improved error handling
          location /api/ {
              proxy_pass http://localhost:8080;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # Timeouts
              proxy_connect_timeout 60s;
              proxy_send_timeout 60s;
              proxy_read_timeout 60s;
              
              # Error handling
              proxy_intercept_errors on;
              error_page 500 502 503 504 /50x.html;
          }
      }

      # HTTP redirect to HTTPS
      server {
          listen 80;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;
          return 301 https://$server_name$request_uri;
      }