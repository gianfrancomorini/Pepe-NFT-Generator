# .ebextensions/00_combined_config.config

container_commands:
  01_create_cert_dirs:
    command: |
      mkdir -p /etc/letsencrypt/live/pepenftgenerator.xyz/
      mkdir -p /etc/letsencrypt/archive/pepenftgenerator.xyz/
      chown -R root:root /etc/letsencrypt
      chmod -R 755 /etc/letsencrypt
    ignoreErrors: false
    
  02_copy_ssl_certs:
    command: |
      # Add debugging
      echo "Starting SSL certificate copy process..."
      
      # Debug S3 access
      aws s3 ls s3://pepenft-ssl-certificates/ssl/ || {
        echo "Failed to list S3 bucket contents"
        exit 1
      }
      
      # Create temporary directory
      TEMP_DIR=$(mktemp -d)
      echo "Created temporary directory: $TEMP_DIR"
      
      # Download certificates with verbose output
      aws s3 cp s3://pepenft-ssl-certificates/ssl/fullchain.pem $TEMP_DIR/fullchain.pem --debug || {
        echo "Failed to download fullchain.pem"
        exit 1
      }
      
      aws s3 cp s3://pepenft-ssl-certificates/ssl/privkey.pem $TEMP_DIR/privkey.pem --debug || {
        echo "Failed to download privkey.pem"
        exit 1
      }
      
      # Verify files exist and have content
      if [ ! -s $TEMP_DIR/fullchain.pem ]; then
        echo "fullchain.pem is missing or empty"
        exit 1
      }
      
      if [ ! -s $TEMP_DIR/privkey.pem ]; then
        echo "privkey.pem is missing or empty"
        exit 1
      }
      
      # Move files to final location
      cp $TEMP_DIR/fullchain.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      cp $TEMP_DIR/privkey.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      
      # Set permissions
      chmod 644 /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem
      chmod 600 /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem
      
      # Verify final files
      ls -l /etc/letsencrypt/live/pepenftgenerator.xyz/
      
      # Cleanup
      rm -rf $TEMP_DIR
      
      echo "SSL certificate copy process completed"
    leader_only: true

  03_verify_nginx_config:
    command: |
      echo "Verifying nginx configuration..."
      nginx -t 2>&1
    ignoreErrors: false

  04_reload_nginx:
    command: |
      echo "Reloading nginx..."
      service nginx reload
    ignoreErrors: false

  # Add command to fix types_hash warning
  05_fix_types_hash:
    command: |
      echo "types_hash_max_size 2048;" > /etc/nginx/conf.d/types_hash.conf
      echo "types_hash_bucket_size 128;" >> /etc/nginx/conf.d/types_hash.conf
    ignoreErrors: false