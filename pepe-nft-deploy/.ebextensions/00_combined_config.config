# .ebextensions/00_combined_config.config

# Package installations
packages:
  yum:
    gcc-c++: []
    make: []
    nginx: []

# Create required directories
commands:
  01_create_cert_dir:
    command: "mkdir -p /etc/letsencrypt/live/pepenftgenerator.xyz/"
    ignoreErrors: true

files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      upstream nodejs {
        server 127.0.0.1:8080;
        keepalive 256;
      }

      # HTTP server block - redirect all HTTP to HTTPS
      server {
        listen 80;
        server_name www.pepenftgenerator.xyz pepenftgenerator.xyz;
        return 301 https://$host$request_uri;
      }

      # HTTPS server block
      server {
        listen 443 ssl http2;
        server_name www.pepenftgenerator.xyz pepenftgenerator.xyz;

        # SSL Configuration
        ssl_certificate      /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem;
        ssl_session_timeout  1d;
        ssl_session_cache    shared:SSL:50m;
        ssl_session_tickets  off;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: https:; font-src 'self' data: https:; upgrade-insecure-requests;" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Root directory and index
        root /var/app/current/build;
        index index.html;

        # Static file serving with caching
        location /static/ {
          expires 30d;
          add_header Cache-Control "public, no-transform";
        }

        # API endpoints
        location /api/ {
          proxy_pass http://nodejs;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_cache_bypass $http_upgrade;
          
          proxy_read_timeout 300;
          proxy_connect_timeout 300;
          proxy_send_timeout 300;
        }

        # Main location block
        location / {
          try_files $uri $uri/ /index.html;
          add_header Cache-Control "no-cache";
        }

        # Handle errors
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root /usr/share/nginx/html;
        }
      }

# Configure Node.js and environment
option_settings:
  # Node.js Configuration
  aws:elasticbeanstalk:container:nodejs: 
    ProxyServer: nginx
  aws:elasticbeanstalk:application:environment:
    NODE_ENV: production
    NPM_USE_PRODUCTION: true
    PORT: 8080
  
  # Proxy Configuration
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx
  
  # Process Configuration
  aws:elasticbeanstalk:environment:process:default:
    Port: 8080
    HealthCheckPath: /api/health
  
  # HTTPS Listener Configuration
  aws:elbv2:listener:443:
    ListenerEnabled: true
    Protocol: HTTPS
    SSLCertificateArns: arn:aws:acm:us-west-1:476114128052:certificate/04125634-3727-4ca6-a934-e4166b69dc13

# S3 Authentication for SSL certificates
Resources:
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          buckets: ["pepenft-ssl-certificates"]
          roleName: 
            "Fn::GetOptionSetting": 
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"

# Container commands for SSL setup and nginx configuration
container_commands:
  01_install_aws_cli:
    command: |
      if ! command -v aws &> /dev/null; then
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
      fi
    ignoreErrors: true
    
  02_copy_ssl:
    command: |
      aws s3 cp s3://pepenft-ssl-certificates/ssl/fullchain.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      aws s3 cp s3://pepenft-ssl-certificates/ssl/privkey.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
    
  03_ssl_permissions:
    command: |
      chmod 755 /etc/letsencrypt/live/pepenftgenerator.xyz
      chmod 600 /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem
      chmod 600 /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem
      chown -R nginx:nginx /etc/letsencrypt/live/pepenftgenerator.xyz
    
  04_nginx_reload:
    command: "service nginx reload"
    ignoreErrors: true