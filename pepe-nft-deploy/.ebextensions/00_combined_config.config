# .ebextensions/00_combined_config.config

option_settings:
  # Instance Configuration
  aws:autoscaling:launchconfiguration:
    InstanceType: t2.medium
    RootVolumeSize: "30"
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
    SecurityGroups: default

  # Platform Configuration
  aws:elasticbeanstalk:platform:nodejs:
    NodeCommand: "npm start"

  # Application Environment
  aws:elasticbeanstalk:application:environment:
    NODE_ENV: production
    NPM_USE_PRODUCTION: false
    PORT: 8080
    NODE_OPTIONS: "--max-old-space-size=4096"

  # Health Check Configuration
  aws:elasticbeanstalk:environment:process:default:
    Port: 8080
    HealthCheckPath: /api/health
    HealthCheckInterval: 15
    HealthCheckTimeout: 5
    HealthyThresholdCount: 3
    UnhealthyThresholdCount: 5
    DeregistrationDelay: 20
    MatcherHTTPCode: 200

commands:
  01_install_node:
    command: |
      curl -fsSL https://rpm.nodesource.com/setup_22.x | bash -
      yum install -y nodejs
      npm install -g npm@10.9.0
    ignoreErrors: true

  02_node_version:
    command: |
      node -v
      npm -v
    ignoreErrors: true

  03_setup_logs:
    command: |
      mkdir -p /var/log/nodejs
      touch /var/log/nodejs/node.log
      chmod 777 /var/log/nodejs/node.log
    ignoreErrors: true

container_commands:
  01_node_build_setup:
    command: |
      mkdir -p /var/app/staging/node_modules
      chmod -R 777 /var/app/staging/node_modules
      echo "Node version: $(node -v)" >> /var/log/nodejs/node.log
      echo "NPM version: $(npm -v)" >> /var/log/nodejs/node.log
    ignoreErrors: true

  02_install_dependencies:
    command: |
      cd /var/app/staging
      npm ci --production=false
      npm audit fix || true
    ignoreErrors: true

  03_build_app:
    command: |
      cd /var/app/staging
      npm run build
      echo "Build completed at $(date)" >> /var/log/nodejs/node.log
    leader_only: true

  04_permissions:
    command: |
      chmod -R 755 /var/app/staging/node_modules
      chmod -R 755 /var/app/staging/build
    ignoreErrors: true

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_fix_permissions.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      chmod -R 755 /var/app/current/node_modules
      chown -R webapp:webapp /var/app/current

files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Main server block for HTTP
      server {
          listen 80;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;
          
          # Force all requests to HTTPS
          if ($http_x_forwarded_proto != 'https') {
              return 301 https://$server_name$request_uri;
          }
          
          # Redirect all HTTP to HTTPS
          return 301 https://$server_name$request_uri;
      }

      # HTTPS server block
      server {
          listen 443 ssl http2;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;

          # SSL Configuration
          ssl_certificate /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem;
          
          ssl_session_timeout 1d;
          ssl_session_cache shared:SSL:50m;
          ssl_session_tickets off;

          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
          ssl_prefer_server_ciphers off;

          # Root directory for your React build
          root /var/app/current/build;
          
          # Security headers with updated CSP
          add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
          add_header X-Content-Type-Options "nosniff" always;
          add_header X-Frame-Options "SAMEORIGIN" always;
          add_header Content-Security-Policy "upgrade-insecure-requests; default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https: blob:; font-src 'self' data: https:; connect-src 'self' https: wss:; frame-ancestors 'self'; base-uri 'self';" always;
          add_header Referrer-Policy "strict-origin-when-cross-origin" always;

          # Serve static files directly
          location /static/ {
              expires 30d;
              add_header Cache-Control "public, no-transform";
              try_files $uri =404;
          }

          # Handle React router
          location / {
              try_files $uri $uri/ /index.html;
              add_header Cache-Control "no-cache";
              
              # Ensure all resources are served over HTTPS
              if ($http_x_forwarded_proto != 'https') {
                  rewrite ^(.*)$ https://$server_name$1 permanent;
              }
          }

          # API proxy
          location /api/ {
              proxy_pass http://localhost:8080;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }

          # Specific rules for common static files
          location = /favicon.ico {
              expires 1y;
              access_log off;
              add_header Cache-Control "public";
          }

          location = /robots.txt {
              expires 1y;
              access_log off;
              add_header Cache-Control "public";
          }

          # Deny access to hidden files
          location ~ /\. {
              deny all;
              access_log off;
              log_not_found off;
          }
      }
