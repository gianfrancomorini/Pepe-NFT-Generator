option_settings:
  # Instance Configuration
  aws:autoscaling:launchconfiguration:
    InstanceType: t2.medium
    RootVolumeSize: "30"
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
    SecurityGroups: default

  # Application Environment
  aws:elasticbeanstalk:application:environment:
    NODE_ENV: production
    NPM_USE_PRODUCTION: false
    PORT: 8080
    NODE_OPTIONS: "--max-old-space-size=4096"

  # Process Configuration
  aws:elasticbeanstalk:environment:process:default:
    Port: 8080
    HealthCheckPath: /api/health
    HealthCheckInterval: 15
    HealthCheckTimeout: 5
    HealthyThresholdCount: 3
    UnhealthyThresholdCount: 5
    DeregistrationDelay: 20
    MatcherHTTPCode: 200

commands:
  01_install_node:
    command: |
      # Remove existing nodejs if present
      yum remove -y nodejs npm
      
      # Install Node 20.x
      curl -fsSL https://rpm.nodesource.com/setup_20.x | bash -
      yum install -y nodejs
      
      # Verify installation
      node --version
      npm --version
      
      # Install specific npm version
      npm install -g npm@10.9.0
    ignoreErrors: false

  02_create_logs:
    command: |
      mkdir -p /var/log/nodejs
      chmod 755 /var/log/nodejs
      touch /var/log/nodejs/node.log
      chmod 664 /var/log/nodejs/node.log
    ignoreErrors: false

container_commands:
  01_install_dependencies:
    command: |
      npm ci --production=false
      echo "Server dependencies installed at $(date)" >> /var/log/nodejs/node.log
    leader_only: true

  02_build_frontend:
    command: |
      npm run build
      echo "Frontend built at $(date)" >> /var/log/nodejs/node.log
    leader_only: true

  03_verify_build:
    command: |
      if [ ! -d "build" ]; then
        echo "Error: build directory not found after build step" >> /var/log/nodejs/node.log
        exit 1
      fi
      echo "Build directory verified at $(date)" >> /var/log/nodejs/node.log
    leader_only: true

  04_setup_permissions:
    command: |
      mkdir -p /var/app/current/
      chown -R webapp:webapp /var/app/current/
      chmod -R 755 /var/app/staging/node_modules
      chmod -R 755 /var/app/staging/build
      echo "Permissions set at $(date)" >> /var/log/nodejs/node.log

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_fix_permissions.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      chown -R webapp:webapp /var/app/current/
      chmod -R 755 /var/app/current/node_modules
      chmod -R 755 /var/app/current/build

  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server block
      server {
          listen 443 ssl http2;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;

          # SSL Configuration
          ssl_certificate /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem;
          
          ssl_session_timeout 1d;
          ssl_session_cache shared:SSL:50m;
          ssl_session_tickets off;

          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
          ssl_prefer_server_ciphers off;

          root /var/app/current/build;
          
          location /static/ {
              expires 30d;
              add_header Cache-Control "public, no-transform";
              try_files $uri =404;
          }

          location / {
              try_files $uri $uri/ /index.html;
              add_header Cache-Control "no-cache";
          }

          location /api/ {
              proxy_pass http://localhost:8080;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

      # HTTP redirect to HTTPS
      server {
          listen 80;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;
          return 301 https://$server_name$request_uri;
      }