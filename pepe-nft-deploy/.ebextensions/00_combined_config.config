commands:
  01_nginx_types_hash:
    command: |
      echo 'types_hash_max_size 2048;' >> /etc/nginx/nginx.conf
      echo 'types_hash_bucket_size 128;' >> /etc/nginx/nginx.conf
    ignoreErrors: true

container_commands:
  01_create_cert_dirs:
    command: |
      mkdir -p /etc/letsencrypt/live/pepenftgenerator.xyz/
      mkdir -p /etc/letsencrypt/archive/pepenftgenerator.xyz/
      chown -R root:root /etc/letsencrypt
      chmod -R 755 /etc/letsencrypt
    ignoreErrors: true
    
  02_copy_ssl_certs:
    command: |
      # Replace YOUR-BUCKET-NAME and PATH-TO-CERTS with your actual values
      aws s3 cp https://pepenft-ssl-certificates.s3.us-west-1.amazonaws.com/ssl/fullchain.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      aws s3 cp https://pepenft-ssl-certificates.s3.us-west-1.amazonaws.com/ssl/privkey.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      
      # Set proper permissions
      chmod 644 /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem
      chmod 600 /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem
      
      # Verify certificates exist
      if [ ! -f /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem ] || [ ! -f /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem ]; then
        echo "Failed to copy SSL certificates from S3"
        exit 1
      fi
    leader_only: true

  03_verify_nginx_config:
    command: |
      nginx -t
    ignoreErrors: true

  04_reload_nginx:
    command: |
      service nginx reload
    ignoreErrors: true

files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server block
      server {
          listen 443 ssl http2;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;

          # SSL Configuration
          ssl_certificate /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem;
          
          ssl_session_timeout 1d;
          ssl_session_cache shared:SSL:50m;
          ssl_session_tickets off;

          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
          ssl_prefer_server_ciphers off;

          root /var/app/current/build;
          
          location /static/ {
              expires 30d;
              add_header Cache-Control "public, no-transform";
              try_files $uri =404;
          }

          location / {
              try_files $uri $uri/ /index.html;
              add_header Cache-Control "no-cache";
          }

          location /api/ {
              proxy_pass http://localhost:8080;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

      # HTTP redirect to HTTPS
      server {
          listen 80;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;
          return 301 https://$server_name$request_uri;
      }