# .ebextensions/00_nginx_ssl.config

files:
  "/etc/nginx/conf.d/ssl.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server
      server {
          listen 443 ssl;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;
          
          ssl_certificate /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem;
          
          ssl_session_timeout 5m;
          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384";
          ssl_prefer_server_ciphers off;
          
          location / {
              proxy_pass http://localhost:8081;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
          }
      }

      # Redirect HTTP to HTTPS
      server {
          listen 80;
          server_name pepenftgenerator.xyz www.pepenftgenerator.xyz;
          return 301 https://$server_name$request_uri;
      }

container_commands:
  01_create_cert_dirs:
    command: |
      mkdir -p /etc/letsencrypt/live/pepenftgenerator.xyz/
      mkdir -p /etc/letsencrypt/archive/pepenftgenerator.xyz/
      chown -R root:root /etc/letsencrypt
      chmod -R 755 /etc/letsencrypt
    ignoreErrors: false
    
  02_copy_ssl_certs:
    command: |
      # Create temporary directory
      TEMP_DIR=$(mktemp -d)
      echo "Created temporary directory: $TEMP_DIR"
      
      # Download certificates with error checking
      if ! aws s3 cp s3://pepenft-ssl-certificates/ssl/fullchain.pem $TEMP_DIR/fullchain.pem; then
        echo "Failed to download fullchain.pem"
        exit 1
      fi
      
      if ! aws s3 cp s3://pepenft-ssl-certificates/ssl/privkey.pem $TEMP_DIR/privkey.pem; then
        echo "Failed to download privkey.pem"
        exit 1
      fi
      
      # Copy files to final location with error checking
      cp $TEMP_DIR/fullchain.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      cp $TEMP_DIR/privkey.pem /etc/letsencrypt/live/pepenftgenerator.xyz/
      
      # Set correct permissions
      chmod 644 /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem
      chmod 600 /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem
      
      # Cleanup
      rm -rf $TEMP_DIR
      
      # Verify files exist and have content
      if [ ! -s /etc/letsencrypt/live/pepenftgenerator.xyz/fullchain.pem ]; then
        echo "Final fullchain.pem is missing or empty"
        exit 1
      fi
      
      if [ ! -s /etc/letsencrypt/live/pepenftgenerator.xyz/privkey.pem ]; then
        echo "Final privkey.pem is missing or empty"
        exit 1
      fi
    leader_only: true

  03_fix_types_hash:
    command: |
      echo "types_hash_max_size 4096;" > /etc/nginx/conf.d/types_hash.conf
      echo "types_hash_bucket_size 128;" >> /etc/nginx/conf.d/types_hash.conf
    ignoreErrors: false

  04_verify_nginx_config:
    command: |
      echo "Verifying nginx configuration..."
      nginx -t || exit 1
    ignoreErrors: false

  05_reload_nginx:
    command: |
      echo "Reloading nginx..."
      service nginx reload || service nginx restart
    ignoreErrors: false

option_settings:
  aws:elasticbeanstalk:application:environment:
    NODE_ENV: production
    PORT: 8081