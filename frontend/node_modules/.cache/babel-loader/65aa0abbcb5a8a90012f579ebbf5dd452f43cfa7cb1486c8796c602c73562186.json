{"ast":null,"code":"const {\n  Buffer\n} = require('buffer');\nconst BufferList = require('bl/BufferList');\nconst {\n  S_IFMT,\n  S_IFBLK,\n  S_IFCHR,\n  S_IFDIR,\n  S_IFIFO,\n  S_IFLNK\n} = require('iso-constants');\nconst concat = require('it-concat');\nconst Headers = require('./pack-headers');\nconst DMODE = parseInt('755', 8);\nconst FMODE = parseInt('644', 8);\nconst END_OF_TAR = Buffer.alloc(1024);\nfunction modeToType(mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK:\n      return 'block-device';\n    case S_IFCHR:\n      return 'character-device';\n    case S_IFDIR:\n      return 'directory';\n    case S_IFIFO:\n      return 'fifo';\n    case S_IFLNK:\n      return 'symlink';\n  }\n  return 'file';\n}\nfunction getPadding(size) {\n  size &= 511;\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size));\n}\nfunction encode(header) {\n  if (!header.pax) {\n    const encoded = Headers.encode(header);\n    if (encoded) return encoded;\n  }\n  return encodePax(header);\n}\nfunction encodePax(header) {\n  const paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  });\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  };\n  return new BufferList([Headers.encode(newHeader), paxHeader, getPadding(paxHeader.length), Headers.encode({\n    ...newHeader,\n    size: header.size,\n    type: header.type\n  })]);\n}\nmodule.exports = () => async function* (source) {\n  for await (let {\n    header,\n    body\n  } of source) {\n    if (!header.size || header.type === 'symlink') header.size = 0;\n    if (!header.type) header.type = modeToType(header.mode);\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE;\n    if (!header.uid) header.uid = 0;\n    if (!header.gid) header.gid = 0;\n    if (!header.mtime) header.mtime = new Date();\n    if (typeof body === 'string') body = Buffer.from(body);\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\n      header.size = body.length;\n      yield new BufferList([encode(header), body, getPadding(header.size)]);\n      continue;\n    }\n    if (header.type === 'symlink' && !header.linkname) {\n      header.linkname = (await concat(body)).toString();\n      yield encode(header);\n      continue;\n    }\n    yield encode(header);\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\n      continue;\n    }\n    let written = 0;\n    for await (const chunk of body) {\n      written += chunk.length;\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk);\n    }\n    if (written !== header.size) {\n      // corrupting tar\n      throw new Error('size mismatch');\n    }\n    const overflow = getPadding(header.size);\n    if (overflow) yield overflow;\n  }\n  yield new BufferList(END_OF_TAR);\n};","map":{"version":3,"names":["Buffer","require","BufferList","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","concat","Headers","DMODE","parseInt","FMODE","END_OF_TAR","alloc","modeToType","mode","getPadding","size","slice","encode","header","pax","encoded","encodePax","paxHeader","name","linkname","newHeader","uid","gid","length","mtime","type","uname","gname","devmajor","devminor","module","exports","source","body","Date","from","isBuffer","isBufferList","toString","written","chunk","Error","overflow"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/node_modules/it-tar/pack.js"],"sourcesContent":["const { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = require('iso-constants')\nconst concat = require('it-concat')\nconst Headers = require('./pack-headers')\n\nconst DMODE = parseInt('755', 8)\nconst FMODE = parseInt('644', 8)\n\nconst END_OF_TAR = Buffer.alloc(1024)\n\nfunction modeToType (mode) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK: return 'block-device'\n    case S_IFCHR: return 'character-device'\n    case S_IFDIR: return 'directory'\n    case S_IFIFO: return 'fifo'\n    case S_IFLNK: return 'symlink'\n  }\n  return 'file'\n}\n\nfunction getPadding (size) {\n  size &= 511\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size))\n}\n\nfunction encode (header) {\n  if (!header.pax) {\n    const encoded = Headers.encode(header)\n    if (encoded) return encoded\n  }\n  return encodePax(header)\n}\n\nfunction encodePax (header) {\n  const paxHeader = Headers.encodePax({\n    name: header.name,\n    linkname: header.linkname,\n    pax: header.pax\n  })\n\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname && 'PaxHeader',\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  }\n\n  return new BufferList([\n    Headers.encode(newHeader),\n    paxHeader,\n    getPadding(paxHeader.length),\n    Headers.encode({ ...newHeader, size: header.size, type: header.type })\n  ])\n}\n\nmodule.exports = () => async function * (source) {\n  for await (let { header, body } of source) {\n    if (!header.size || header.type === 'symlink') header.size = 0\n    if (!header.type) header.type = modeToType(header.mode)\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE\n    if (!header.uid) header.uid = 0\n    if (!header.gid) header.gid = 0\n    if (!header.mtime) header.mtime = new Date()\n\n    if (typeof body === 'string') body = Buffer.from(body)\n\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\n      header.size = body.length\n      yield new BufferList([encode(header), body, getPadding(header.size)])\n      continue\n    }\n\n    if (header.type === 'symlink' && !header.linkname) {\n      header.linkname = (await concat(body)).toString()\n      yield encode(header)\n      continue\n    }\n\n    yield encode(header)\n\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\n      continue\n    }\n\n    let written = 0\n    for await (const chunk of body) {\n      written += chunk.length\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk)\n    }\n\n    if (written !== header.size) { // corrupting tar\n      throw new Error('size mismatch')\n    }\n\n    const overflow = getPadding(header.size)\n    if (overflow) yield overflow\n  }\n\n  yield new BufferList(END_OF_TAR)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}