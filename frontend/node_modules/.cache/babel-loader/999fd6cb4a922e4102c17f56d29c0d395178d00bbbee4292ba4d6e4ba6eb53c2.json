{"ast":null,"code":"var _jsxFileName = \"/Users/gianfrancomorini/Pepe-NFT-Generator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    emotion: '',\n    clothes: '',\n    accessories: '',\n    background: ''\n  });\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/generate-image', formData);\n      setGeneratedImage(response.data.imageUrl);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pepe NFT Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"emotion\",\n        placeholder: \"Emotion\",\n        value: formData.emotion,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"clothes\",\n        placeholder: \"Clothes\",\n        value: formData.clothes,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"accessories\",\n        placeholder: \"Accessories\",\n        value: formData.accessories,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"background\",\n        placeholder: \"Background\",\n        value: formData.background,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Pepe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), generatedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: generatedImage,\n      alt: \"Generated Pepe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v0SKyEePxruB5Tbtu4NAsiBxi2o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","formData","setFormData","emotion","clothes","accessories","background","generatedImage","setGeneratedImage","handleInputChange","e","target","name","value","handleSubmit","preventDefault","response","post","data","imageUrl","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","src","alt","_c","$RefreshReg$"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    emotion: '',\n    clothes: '',\n    accessories: '',\n    background: ''\n  });\n  const [generatedImage, setGeneratedImage] = useState(null);\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/generate-image', formData);\n      setGeneratedImage(response.data.imageUrl);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Pepe NFT Generator</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"emotion\"\n          placeholder=\"Emotion\"\n          value={formData.emotion}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"clothes\"\n          placeholder=\"Clothes\"\n          value={formData.clothes}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"accessories\"\n          placeholder=\"Accessories\"\n          value={formData.accessories}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"background\"\n          placeholder=\"Background\"\n          value={formData.background}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Generate Pepe</button>\n      </form>\n      {generatedImage && <img src={generatedImage} alt=\"Generated Pepe\" />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}