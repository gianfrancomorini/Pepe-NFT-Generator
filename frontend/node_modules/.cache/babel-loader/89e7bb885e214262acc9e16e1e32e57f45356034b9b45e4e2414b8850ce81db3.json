{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\nconst configure = require('../lib/configure');\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat(options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n  return stat;\n});\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */k) => new CID(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}","map":{"version":3,"names":["CID","require","configure","toUrlSearchParams","module","exports","api","stat","options","res","post","searchParams","timeout","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","peers","Peers","blocksReceived","BigInt","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/node_modules/ipfs-http-client/src/bitswap/stat.js"],"sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k) => new CID(k['/'])),\n    peers: (res.Peers || []),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC3B,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAGH,SAAS,CAACI,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,IAAIA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,cAAc,EAAE;MACzCC,YAAY,EAAER,iBAAiB,CAACK,OAAO,CAAC;MACxCI,OAAO,EAAEJ,OAAO,CAACI,OAAO;MACxBC,MAAM,EAAEL,OAAO,CAACK,MAAM;MACtBC,OAAO,EAAEN,OAAO,CAACM;IACnB,CAAC,CAAC;IAEF,OAAOC,eAAe,CAAC,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC,CAAC;EAC1C;EACA,OAAOT,IAAI;AACb,CAAC,CAAC;;AAEF;AACA;AACA;AACA,SAASQ,eAAeA,CAAEN,GAAG,EAAE;EAC7B,OAAO;IACLQ,aAAa,EAAER,GAAG,CAACS,aAAa;IAChCC,QAAQ,EAAE,CAACV,GAAG,CAACW,QAAQ,IAAI,EAAE,EAAEC,GAAG,CAAC,CAAC,8BAA+BC,CAAC,KAAK,IAAItB,GAAG,CAACsB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACzFC,KAAK,EAAGd,GAAG,CAACe,KAAK,IAAI,EAAG;IACxBC,cAAc,EAAEC,MAAM,CAACjB,GAAG,CAACkB,cAAc,CAAC;IAC1CC,YAAY,EAAEF,MAAM,CAACjB,GAAG,CAACoB,YAAY,CAAC;IACtCC,UAAU,EAAEJ,MAAM,CAACjB,GAAG,CAACsB,UAAU,CAAC;IAClCC,QAAQ,EAAEN,MAAM,CAACjB,GAAG,CAACwB,QAAQ,CAAC;IAC9BC,eAAe,EAAER,MAAM,CAACjB,GAAG,CAAC0B,eAAe,CAAC;IAC5CC,eAAe,EAAEV,MAAM,CAACjB,GAAG,CAAC4B,eAAe;EAC7C,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}