{"ast":null,"code":"var _jsxFileName = \"/Users/gianfrancomorini/Pepe-NFT-Generator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ethers, BrowserProvider, Contract } from 'ethers';\n\n// Replace with your actual contract ABI and address\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractABI = [/* Your contract ABI here */];\nconst contractAddress = \"Your_Contract_Address_Here\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    emotion: '',\n    clothes: '',\n    accessories: '',\n    background: ''\n  });\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  useEffect(() => {\n    const initEthers = async () => {\n      // Check if MetaMask is installed\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          // Request account access\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const provider = new BrowserProvider(window.ethereum);\n          setProvider(provider);\n          const signer = await provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          const nftContract = new Contract(contractAddress, contractABI, signer);\n          setContract(nftContract);\n\n          // Listen for account changes\n          window.ethereum.on('accountsChanged', accounts => {\n            setAccount(accounts[0]);\n          });\n        } catch (error) {\n          console.error(\"User denied account access or there was an error:\", error);\n        }\n      } else {\n        console.log('Please install MetaMask!');\n      }\n    };\n    initEthers();\n\n    // Cleanup function to remove event listener\n    return () => {\n      if (window.ethereum && window.ethereum.removeListener) {\n        window.ethereum.removeListener('accountsChanged', setAccount);\n      }\n    };\n  }, []);\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/generate-image', formData);\n      setGeneratedImage(response.data.imageUrl);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n  };\n  const mintNFT = async () => {\n    if (!contract || !generatedImage) return;\n    try {\n      // Assuming your contract has a `mintNFT` function that takes a URI\n      const tx = await contract.mintNFT(generatedImage);\n      await tx.wait();\n      alert('NFT minted successfully!');\n    } catch (error) {\n      console.error('Error minting NFT:', error);\n    }\n  };\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const signer = await provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n      } catch (error) {\n        console.error(\"Failed to connect wallet:\", error);\n      }\n    } else {\n      console.log('Please install MetaMask!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pepe NFT Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"emotion\",\n        placeholder: \"Emotion\",\n        value: formData.emotion,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"clothes\",\n        placeholder: \"Clothes\",\n        value: formData.clothes,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"accessories\",\n        placeholder: \"Accessories\",\n        value: formData.accessories,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"background\",\n        placeholder: \"Background\",\n        value: formData.background,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Pepe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), generatedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: generatedImage,\n        alt: \"Generated Pepe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintNFT,\n        children: \"Mint NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ybXrZA1h2D7BPymFrs4sahmyKEU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ethers","BrowserProvider","Contract","jsxDEV","_jsxDEV","contractABI","contractAddress","App","_s","formData","setFormData","emotion","clothes","accessories","background","generatedImage","setGeneratedImage","account","setAccount","contract","setContract","provider","setProvider","initEthers","window","ethereum","request","method","signer","getSigner","address","getAddress","nftContract","on","accounts","error","console","log","removeListener","handleInputChange","e","target","name","value","handleSubmit","preventDefault","response","post","data","imageUrl","mintNFT","tx","wait","alert","connectWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","src","alt","_c","$RefreshReg$"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ethers, BrowserProvider, Contract } from 'ethers';\n\n// Replace with your actual contract ABI and address\nconst contractABI = [/* Your contract ABI here */];\nconst contractAddress = \"Your_Contract_Address_Here\";\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    emotion: '',\n    clothes: '',\n    accessories: '',\n    background: ''\n  });\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n\n  useEffect(() => {\n    const initEthers = async () => {\n      // Check if MetaMask is installed\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          // Request account access\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const provider = new BrowserProvider(window.ethereum);\n          setProvider(provider);\n\n          const signer = await provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n\n          const nftContract = new Contract(contractAddress, contractABI, signer);\n          setContract(nftContract);\n\n          // Listen for account changes\n          window.ethereum.on('accountsChanged', (accounts) => {\n            setAccount(accounts[0]);\n          });\n        } catch (error) {\n          console.error(\"User denied account access or there was an error:\", error);\n        }\n      } else {\n        console.log('Please install MetaMask!');\n      }\n    };\n\n    initEthers();\n\n    // Cleanup function to remove event listener\n    return () => {\n      if (window.ethereum && window.ethereum.removeListener) {\n        window.ethereum.removeListener('accountsChanged', setAccount);\n      }\n    };\n  }, []);\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/generate-image', formData);\n      setGeneratedImage(response.data.imageUrl);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n  };\n\n  const mintNFT = async () => {\n    if (!contract || !generatedImage) return;\n    try {\n      // Assuming your contract has a `mintNFT` function that takes a URI\n      const tx = await contract.mintNFT(generatedImage);\n      await tx.wait();\n      alert('NFT minted successfully!');\n    } catch (error) {\n      console.error('Error minting NFT:', error);\n    }\n  };\n\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const signer = await provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n      } catch (error) {\n        console.error(\"Failed to connect wallet:\", error);\n      }\n    } else {\n      console.log('Please install MetaMask!');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Pepe NFT Generator</h1>\n      {account ? (\n        <p>Connected: {account}</p>\n      ) : (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      )}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"emotion\"\n          placeholder=\"Emotion\"\n          value={formData.emotion}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"clothes\"\n          placeholder=\"Clothes\"\n          value={formData.clothes}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"accessories\"\n          placeholder=\"Accessories\"\n          value={formData.accessories}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"background\"\n          placeholder=\"Background\"\n          value={formData.background}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Generate Pepe</button>\n      </form>\n      {generatedImage && (\n        <div>\n          <img src={generatedImage} alt=\"Generated Pepe\" />\n          <button onClick={mintNFT}>Mint NFT</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}