{"ast":null,"code":"'use strict';\n\nconst toCamel = require('../lib/object-to-camel');\nconst configure = require('../lib/configure');\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list(options = {}) {\n    const res = await api.post('key/list', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n\n    // @ts-ignore server output is not typed\n    return (data.Keys || []).map((/** @type {any} **/k) => toCamel(k));\n  }\n  return list;\n});","map":{"version":3,"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","list","options","res","post","timeout","signal","searchParams","headers","data","json","Keys","map","k"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/node_modules/ipfs-http-client/src/key/list.js"],"sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('key/list', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-ignore server output is not typed\n    return (data.Keys || []).map((/** @type {any} **/ k) => toCamel(k))\n  }\n  return list\n})\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACjD,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAGH,SAAS,CAACI,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,IAAIA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,UAAU,EAAE;MACrCC,OAAO,EAAEH,OAAO,CAACG,OAAO;MACxBC,MAAM,EAAEJ,OAAO,CAACI,MAAM;MACtBC,YAAY,EAAEV,iBAAiB,CAACK,OAAO,CAAC;MACxCM,OAAO,EAAEN,OAAO,CAACM;IACnB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;;IAE7B;IACA,OAAO,CAACD,IAAI,CAACE,IAAI,IAAI,EAAE,EAAEC,GAAG,CAAC,CAAC,mBAAoBC,CAAC,KAAKnB,OAAO,CAACmB,CAAC,CAAC,CAAC;EACrE;EACA,OAAOZ,IAAI;AACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}