{"ast":null,"code":"var _jsxFileName = \"/Users/gianfrancomorini/Pepe-NFT-Generator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ethers } from 'ethers';\nimport { create } from 'ipfs-http-client';\n\n// IPFS configuration (using Infura)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectId = '5013c224cf674b928b90a9801887967c';\nconst projectSecret = 'Nc8DK/ZCr1D0ExEsVxAPsA2rXGblzEqVTEAsBbPcqNoersCoFQ+1/g';\nconst auth = 'Basic ' + btoa(projectId + ':' + projectSecret);\nconst client = create({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth\n  }\n});\n\n// Contract ABI and addresses\nconst contractABI = [{\n  \"inputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"approved\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"Approval\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bool\",\n    \"name\": \"approved\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"ApprovalForAll\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"previousOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnershipTransferred\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"Transfer\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"approve\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"balanceOf\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"getApproved\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isApprovedForAll\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [],\n  \"name\": \"name\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"ownerOf\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [],\n  \"name\": \"renounceOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"safeTransferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"bytes\",\n    \"name\": \"data\",\n    \"type\": \"bytes\"\n  }],\n  \"name\": \"safeTransferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"bool\",\n    \"name\": \"approved\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"setApprovalForAll\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"bytes4\",\n    \"name\": \"interfaceId\",\n    \"type\": \"bytes4\"\n  }],\n  \"name\": \"supportsInterface\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [],\n  \"name\": \"symbol\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"transferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"transferOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"recipient\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"_tokenURI\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"mintNFT\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"tokenURI\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\",\n  \"constant\": true\n}]; // ABI truncated for brevity\nconst contractAddress = \"0x53D99642Ea46039c2AB681cabd4B7Df7CD87DE19\";\nconst PEPE_CONTRACT_ADDRESS = '0x6982508145454ce325ddbe47a25d4ec3d2311933';\nconst PEPE_ABI = ['function balanceOf(address account) external view returns (uint256)', 'function transfer(address recipient, uint256 amount) external returns (bool)'];\nfunction App() {\n  _s();\n  // State variables\n  const [formData, setFormData] = useState({\n    emotion: '',\n    clothes: '',\n    accessories: '',\n    background: ''\n  });\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [pepeBalance, setPepeBalance] = useState(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [metadataUrl, setMetadataUrl] = useState(null);\n  const [isImageLoading, setIsImageLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Effect for initializing ethers and connecting to the wallet\n  useEffect(() => {\n    const initEthers = async () => {\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          setProvider(provider);\n          const signer = await provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n          const nftContract = new ethers.Contract(contractAddress, contractABI, signer);\n          setContract(nftContract);\n          const pepeContract = new ethers.Contract(PEPE_CONTRACT_ADDRESS, PEPE_ABI, signer);\n          const balance = await pepeContract.balanceOf(address);\n          setPepeBalance(ethers.formatUnits(balance, 18));\n          window.ethereum.on('accountsChanged', accounts => {\n            setAccount(accounts[0]);\n          });\n        } catch (error) {\n          console.error(\"User denied account access or there was an error:\", error);\n        }\n      } else {\n        console.log('Please install MetaMask!');\n      }\n    };\n    initEthers();\n    return () => {\n      if (window.ethereum && window.ethereum.removeListener) {\n        window.ethereum.removeListener('accountsChanged', setAccount);\n      }\n    };\n  }, []);\n\n  // Form input handler\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Form submission handler\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsGenerating(true);\n    console.log('Starting image generation process...');\n    try {\n      console.log('Sending request to backend:', formData);\n      const response = await axios.post('http://localhost:3001/generate-image', formData);\n      console.log('Received response from backend:', response.data);\n      if (response.data.imageUrl) {\n        setGeneratedImage(response.data.imageUrl);\n\n        // Create metadata\n        const metadata = {\n          name: `Pepe NFT #${Date.now()}`,\n          description: \"A unique Pepe NFT with custom attributes\",\n          image: ipfsImageUrl,\n          attributes: [{\n            trait_type: \"Emotion\",\n            value: formData.emotion\n          }, {\n            trait_type: \"Clothes\",\n            value: formData.clothes\n          }, {\n            trait_type: \"Accessories\",\n            value: formData.accessories\n          }, {\n            trait_type: \"Background\",\n            value: formData.background\n          }]\n        };\n        console.log('Uploading metadata to IPFS:', metadata);\n        const metadataResponse = await axios.post('http://localhost:3001/upload-metadata', metadata);\n        console.log('Metadata uploaded, IPFS URL:', metadataResponse.data.metadataUrl);\n        setMetadataUrl(metadataResponse.data.metadataUrl);\n      } else {\n        console.error('No image URL in response');\n      }\n    } catch (error) {\n      console.error('Error generating image or uploading metadata:', error);\n    } finally {\n      setIsGenerating(false);\n      console.log('Generation process completed.');\n    }\n  };\n\n  // IPFS upload functions\n  const uploadToIPFS = async metadata => {\n    try {\n      const result = await client.add(JSON.stringify(metadata));\n      console.log('IPFS upload result:', result);\n      return `https://${projectId}.ipfs.infura-ipfs.io/ipfs/${result.path}`;\n    } catch (error) {\n      console.error('Error uploading to IPFS:', error);\n      throw error;\n    }\n  };\n  const uploadImageToIPFS = async imageUrl => {\n    try {\n      const response = await axios.get(imageUrl, {\n        responseType: 'arraybuffer'\n      });\n      const buffer = Buffer.from(response.data, 'binary');\n      const result = await client.add(buffer);\n      return `https://ipfs.io/ipfs/${result.path}`;\n    } catch (error) {\n      console.error('Error uploading image to IPFS:', error);\n      throw error;\n    }\n  };\n\n  // NFT minting function\n  const mintNFT = async () => {\n    if (!contract || !metadataUrl) {\n      console.error('Contract or metadata URL is not available');\n      alert('Unable to mint NFT. Please ensure you are connected and have generated an image.');\n      return;\n    }\n    try {\n      console.log('Minting NFT with metadata URL:', metadataUrl);\n      const tx = await contract.mintNFT(account, metadataUrl);\n      console.log('Transaction sent:', tx.hash);\n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt.transactionHash);\n\n      // Fetch the token ID from the transaction receipt\n      const transferEvent = receipt.logs.find(log => log.eventName === 'Transfer');\n      const tokenId = transferEvent.args.tokenId;\n\n      // Fetch the token URI\n      const tokenURI = await contract.tokenURI(tokenId);\n      console.log('Token URI:', tokenURI);\n\n      // Fetch the metadata\n      const response = await axios.get(tokenURI);\n      const metadata = response.data;\n      console.log('NFT Metadata:', metadata);\n\n      // Update the UI with the minted NFT image\n      if (metadata.image) {\n        setGeneratedImage(metadata.image);\n      }\n      alert('NFT minted successfully!');\n    } catch (error) {\n      console.error('Error minting NFT:', error);\n      alert(`Failed to mint NFT: ${error.message}`);\n    }\n  };\n\n  // Wallet connection function\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const signer = await provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        const pepeContract = new ethers.Contract(PEPE_CONTRACT_ADDRESS, PEPE_ABI, signer);\n        const balance = await pepeContract.balanceOf(address);\n        setPepeBalance(ethers.formatUnits(balance, 18));\n      } catch (error) {\n        console.error(\"Failed to connect wallet:\", error);\n      }\n    } else {\n      console.log('Please install MetaMask!');\n    }\n  };\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pepe NFT Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info\",\n      children: account ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected: \", account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"PEPE Balance: \", pepeBalance ? `${pepeBalance} PEPE` : 'Loading...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"emotion\",\n        placeholder: \"Emotion\",\n        value: formData.emotion,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"clothes\",\n        placeholder: \"Clothes\",\n        value: formData.clothes,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"accessories\",\n        placeholder: \"Accessories\",\n        value: formData.accessories,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"background\",\n        placeholder: \"Background\",\n        value: formData.background,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isGenerating,\n        children: isGenerating ? 'Generating...' : 'Generate Pepe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this), generatedImage && metadataUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: generatedImage,\n        alt: \"Generated Pepe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintNFT,\n        children: \"Mint NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 635,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BcM35GjvYYLSCUnF4y068gayWfA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ethers","create","jsxDEV","_jsxDEV","projectId","projectSecret","auth","btoa","client","host","port","protocol","headers","authorization","contractABI","contractAddress","PEPE_CONTRACT_ADDRESS","PEPE_ABI","App","_s","formData","setFormData","emotion","clothes","accessories","background","generatedImage","setGeneratedImage","account","setAccount","contract","setContract","provider","setProvider","pepeBalance","setPepeBalance","isGenerating","setIsGenerating","metadataUrl","setMetadataUrl","isImageLoading","setIsImageLoading","error","setError","initEthers","window","ethereum","request","method","BrowserProvider","signer","getSigner","address","getAddress","nftContract","Contract","pepeContract","balance","balanceOf","formatUnits","on","accounts","console","log","removeListener","handleInputChange","e","target","name","value","handleSubmit","preventDefault","response","post","data","imageUrl","metadata","Date","now","description","image","ipfsImageUrl","attributes","trait_type","metadataResponse","uploadToIPFS","result","add","JSON","stringify","path","uploadImageToIPFS","get","responseType","buffer","Buffer","from","mintNFT","alert","tx","hash","receipt","wait","transactionHash","transferEvent","logs","find","eventName","tokenId","args","tokenURI","message","connectWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","disabled","src","alt","_c","$RefreshReg$"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ethers } from 'ethers';\nimport { create } from 'ipfs-http-client';\n\n// IPFS configuration (using Infura)\nconst projectId = '5013c224cf674b928b90a9801887967c';\nconst projectSecret = 'Nc8DK/ZCr1D0ExEsVxAPsA2rXGblzEqVTEAsBbPcqNoersCoFQ+1/g';\nconst auth = 'Basic ' + btoa(projectId + ':' + projectSecret);\n\nconst client = create({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  headers: {\n    authorization: auth,\n  },\n});\n\n// Contract ABI and addresses\nconst contractABI = [\n    {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"approved\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"renounceOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"recipient\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_tokenURI\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"mintNFT\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    }]; // ABI truncated for brevity\nconst contractAddress = \"0x53D99642Ea46039c2AB681cabd4B7Df7CD87DE19\";\n\nconst PEPE_CONTRACT_ADDRESS = '0x6982508145454ce325ddbe47a25d4ec3d2311933';\nconst PEPE_ABI = [\n  'function balanceOf(address account) external view returns (uint256)',\n  'function transfer(address recipient, uint256 amount) external returns (bool)'\n];\n\nfunction App() {\n  // State variables\n  const [formData, setFormData] = useState({ emotion: '', clothes: '', accessories: '', background: '' });\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [pepeBalance, setPepeBalance] = useState(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [metadataUrl, setMetadataUrl] = useState(null);\n  const [isImageLoading, setIsImageLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  // Effect for initializing ethers and connecting to the wallet\n  useEffect(() => {\n    const initEthers = async () => {\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          setProvider(provider);\n\n          const signer = await provider.getSigner();\n          const address = await signer.getAddress();\n          setAccount(address);\n\n          const nftContract = new ethers.Contract(contractAddress, contractABI, signer);\n          setContract(nftContract);\n\n          const pepeContract = new ethers.Contract(PEPE_CONTRACT_ADDRESS, PEPE_ABI, signer);\n          const balance = await pepeContract.balanceOf(address);\n          setPepeBalance(ethers.formatUnits(balance, 18));\n\n          window.ethereum.on('accountsChanged', (accounts) => {\n            setAccount(accounts[0]);\n          });\n        } catch (error) {\n          console.error(\"User denied account access or there was an error:\", error);\n        }\n      } else {\n        console.log('Please install MetaMask!');\n      }\n    };\n\n    initEthers();\n\n    return () => {\n      if (window.ethereum && window.ethereum.removeListener) {\n        window.ethereum.removeListener('accountsChanged', setAccount);\n      }\n    };\n  }, []);\n\n  // Form input handler\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  // Form submission handler\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsGenerating(true);\n    console.log('Starting image generation process...');\n    try {\n      console.log('Sending request to backend:', formData);\n      const response = await axios.post('http://localhost:3001/generate-image', formData);\n      console.log('Received response from backend:', response.data);\n      \n      if (response.data.imageUrl) {\n        setGeneratedImage(response.data.imageUrl);\n        \n        // Create metadata\n        const metadata = {\n          name: `Pepe NFT #${Date.now()}`,\n          description: \"A unique Pepe NFT with custom attributes\",\n          image: ipfsImageUrl,\n          attributes: [\n            { trait_type: \"Emotion\", value: formData.emotion },\n            { trait_type: \"Clothes\", value: formData.clothes },\n            { trait_type: \"Accessories\", value: formData.accessories },\n            { trait_type: \"Background\", value: formData.background }\n          ]\n        };\n    \n        console.log('Uploading metadata to IPFS:', metadata);\n        const metadataResponse = await axios.post('http://localhost:3001/upload-metadata', metadata);\n        console.log('Metadata uploaded, IPFS URL:', metadataResponse.data.metadataUrl);\n        setMetadataUrl(metadataResponse.data.metadataUrl);\n      } else {\n        console.error('No image URL in response');\n      }\n    } catch (error) {\n      console.error('Error generating image or uploading metadata:', error);\n    } finally {\n      setIsGenerating(false);\n      console.log('Generation process completed.');\n    }\n  };\n\n  // IPFS upload functions\n  const uploadToIPFS = async (metadata) => {\n    try {\n      const result = await client.add(JSON.stringify(metadata));\n      console.log('IPFS upload result:', result);\n      return `https://${projectId}.ipfs.infura-ipfs.io/ipfs/${result.path}`;\n    } catch (error) {\n      console.error('Error uploading to IPFS:', error);\n      throw error;\n    }\n  };\n\n  const uploadImageToIPFS = async (imageUrl) => {\n    try {\n      const response = await axios.get(imageUrl, { responseType: 'arraybuffer' });\n      const buffer = Buffer.from(response.data, 'binary');\n      const result = await client.add(buffer);\n      return `https://ipfs.io/ipfs/${result.path}`;\n    } catch (error) {\n      console.error('Error uploading image to IPFS:', error);\n      throw error;\n    }\n  };\n\n  // NFT minting function\n  const mintNFT = async () => {\n    if (!contract || !metadataUrl) {\n      console.error('Contract or metadata URL is not available');\n      alert('Unable to mint NFT. Please ensure you are connected and have generated an image.');\n      return;\n    }\n    try {\n      console.log('Minting NFT with metadata URL:', metadataUrl);\n      const tx = await contract.mintNFT(account, metadataUrl);\n      console.log('Transaction sent:', tx.hash);\n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt.transactionHash);\n      \n      // Fetch the token ID from the transaction receipt\n      const transferEvent = receipt.logs.find(log => log.eventName === 'Transfer');\n      const tokenId = transferEvent.args.tokenId;\n      \n      // Fetch the token URI\n      const tokenURI = await contract.tokenURI(tokenId);\n      console.log('Token URI:', tokenURI);\n      \n      // Fetch the metadata\n      const response = await axios.get(tokenURI);\n      const metadata = response.data;\n      console.log('NFT Metadata:', metadata);\n      \n      // Update the UI with the minted NFT image\n      if (metadata.image) {\n        setGeneratedImage(metadata.image);\n      }\n      \n      alert('NFT minted successfully!');\n    } catch (error) {\n      console.error('Error minting NFT:', error);\n      alert(`Failed to mint NFT: ${error.message}`);\n    }\n  };\n\n  // Wallet connection function\n  const connectWallet = async () => {\n    if (provider) {\n      try {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const signer = await provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n\n        const pepeContract = new ethers.Contract(PEPE_CONTRACT_ADDRESS, PEPE_ABI, signer);\n        const balance = await pepeContract.balanceOf(address);\n        setPepeBalance(ethers.formatUnits(balance, 18));\n      } catch (error) {\n        console.error(\"Failed to connect wallet:\", error);\n      }\n    } else {\n      console.log('Please install MetaMask!');\n    }\n  };\n\n  // Render component\n  return (\n    <div className=\"App\">\n      <h1>Pepe NFT Generator</h1>\n      <div className=\"wallet-info\">\n        {account ? (\n          <div>\n            <p>Connected: {account}</p>\n            <p>PEPE Balance: {pepeBalance ? `${pepeBalance} PEPE` : 'Loading...'}</p>\n          </div>\n        ) : (\n          <button onClick={connectWallet}>Connect Wallet</button>\n        )}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"emotion\" placeholder=\"Emotion\" value={formData.emotion} onChange={handleInputChange} />\n        <input type=\"text\" name=\"clothes\" placeholder=\"Clothes\" value={formData.clothes} onChange={handleInputChange} />\n        <input type=\"text\" name=\"accessories\" placeholder=\"Accessories\" value={formData.accessories} onChange={handleInputChange} />\n        <input type=\"text\" name=\"background\" placeholder=\"Background\" value={formData.background} onChange={handleInputChange} />\n        <button type=\"submit\" disabled={isGenerating}>\n          {isGenerating ? 'Generating...' : 'Generate Pepe'}\n        </button>\n      </form>\n      {generatedImage && metadataUrl && (\n        <div>\n          <img src={generatedImage} alt=\"Generated Pepe\" />\n          <button onClick={mintNFT}>Mint NFT</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}