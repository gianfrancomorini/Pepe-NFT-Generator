{"ast":null,"code":"'use strict';\n\nconst {\n  Multiaddr\n} = require('multiaddr');\nconst configure = require('../lib/configure');\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {SwarmAPI[\"localAddrs\"]}\n   */\n  async function localAddrs(options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n\n    /** @type {{ Strings: string[] }} */\n    const {\n      Strings\n    } = await res.json();\n    return (Strings || []).map(a => new Multiaddr(a));\n  }\n  return localAddrs;\n});","map":{"version":3,"names":["Multiaddr","require","configure","toUrlSearchParams","module","exports","api","localAddrs","options","res","post","timeout","signal","searchParams","headers","Strings","json","map","a"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/node_modules/ipfs-http-client/src/swarm/localAddrs.js"],"sourcesContent":["'use strict'\n\nconst { Multiaddr } = require('multiaddr')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {SwarmAPI[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Strings: string[] }} */\n    const { Strings } = await res.json()\n\n    return (Strings || []).map(a => new Multiaddr(a))\n  }\n  return localAddrs\n})\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;;AAEhE;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAGH,SAAS,CAACI,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,UAAUA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,mBAAmB,EAAE;MAC9CC,OAAO,EAAEH,OAAO,CAACG,OAAO;MACxBC,MAAM,EAAEJ,OAAO,CAACI,MAAM;MACtBC,YAAY,EAAEV,iBAAiB,CAACK,OAAO,CAAC;MACxCM,OAAO,EAAEN,OAAO,CAACM;IACnB,CAAC,CAAC;;IAEF;IACA,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;IAEpC,OAAO,CAACD,OAAO,IAAI,EAAE,EAAEE,GAAG,CAACC,CAAC,IAAI,IAAIlB,SAAS,CAACkB,CAAC,CAAC,CAAC;EACnD;EACA,OAAOX,UAAU;AACnB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}