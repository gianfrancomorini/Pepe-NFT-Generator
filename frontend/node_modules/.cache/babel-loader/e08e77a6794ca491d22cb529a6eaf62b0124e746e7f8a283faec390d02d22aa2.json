{"ast":null,"code":"'use strict';\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nconst fromNumberTo32BitBuf = number => {\n  const bytes = new Uint8Array(4);\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff;\n    number = number >> 8;\n  }\n  return bytes;\n};\nmodule.exports = {\n  fromNumberTo32BitBuf\n};","map":{"version":3,"names":["fromNumberTo32BitBuf","number","bytes","Uint8Array","i","module","exports"],"sources":["/Users/gianfrancomorini/Pepe-NFT-Generator/node_modules/multihashing-async/src/utils.js"],"sourcesContent":["'use strict'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nconst fromNumberTo32BitBuf = (number) => {\n  const bytes = new Uint8Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return bytes\n}\n\nmodule.exports = {\n  fromNumberTo32BitBuf\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAIC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC;EAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BF,KAAK,CAACE,CAAC,CAAC,GAAGH,MAAM,GAAG,IAAI;IACxBA,MAAM,GAAGA,MAAM,IAAI,CAAC;EACtB;EAEA,OAAOC,KAAK;AACd,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAG;EACfN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}